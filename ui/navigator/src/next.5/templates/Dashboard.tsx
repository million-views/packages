// file: src/next/navigator/templates/Dashboard.tsx
import type { ElementType } from "react";
import { useNavigator } from "../Navigator";
import type { TemplateProps } from "../types";
import { Actions, Brand, Drawer, Header, Item } from "../components";
import "../navigator.css";
import "./styles/dashboard.css";

/**
 * Dashboard Template specific UI element tree/structure
 */
export interface DashboardUiTree {
  header?: {
    element?: ElementType;
    brand?: ElementType;
    search?: ElementType;
    actions?: ElementType;
  };
  drawer?: ElementType;
}

export function Dashboard({ components }: TemplateProps<DashboardUiTree>) {
  const {
    isDrawerOpen,
    isMobile,
    closeDrawer,
    appTitle,
    logo,
    renderIcon,
    navigationTree,
    activeSection,
  } = useNavigator();

  // Get navigation items for the drawer
  const navItems = navigationTree[activeSection] || [];

  // Get components (custom or default)
  const HeaderComponent = components?.header?.element || Header;
  const BrandComponent = components?.header?.brand || Brand;
  const DrawerComponent = components?.drawer || Drawer;

  // Create the search component
  const searchComponent = components?.header?.search || (
    <div className="mv-nav-search">
      <input
        type="text"
        placeholder="Search..."
        className="dashboard-nav-search-input"
      />
    </div>
  );

  // Create the actions component
  const actionsComponent = components?.header?.actions || (
    <Actions>
      <button className="mv-nav-action-button" aria-label="Notifications">
        {renderIcon("Bell", 24)}
      </button>
      <button className="mv-nav-action-button" aria-label="Settings">
        {renderIcon("Settings", 24)}
      </button>
      <button className="mv-nav-action-button" aria-label="User">
        {renderIcon("User", 24)}
      </button>
    </Actions>
  );

  return (
    <div className="mv-dashboard-container">
      <HeaderComponent>
        <BrandComponent
          title={appTitle || "Dashboard"}
          logo={logo || renderIcon("LayoutDashboard", 24)}
        />
        {searchComponent}
        {actionsComponent}
      </HeaderComponent>

      <div className="mv-dashboard-layout">
        {/* Pass items explicitly instead of letting Drawer access navigationTree */}
        <DrawerComponent mode="persistent">
          {/* Navigation content generated by the template */}
          {navItems.map((item) => <Item key={item.id} item={item} />)}
        </DrawerComponent>
      </div>

      {/* Mobile backdrop */}
      {isMobile && isDrawerOpen && (
        <div className="mv-nav-backdrop" onClick={closeDrawer} />
      )}
    </div>
  );
}
